import jenkins.model.*
import com.cloudbees.plugins.credentials.CredentialsScope
import com.cloudbees.plugins.credentials.impl.UsernamePasswordCredentialsImpl

def addPassword = { username, new_password, new_id, description ->
    def creds = com.cloudbees.plugins.credentials.CredentialsProvider.lookupCredentials(
        com.cloudbees.plugins.credentials.common.StandardUsernameCredentials.class,
        Jenkins.instance
    )

//    def c = creds.findResult { it.username == username ? it : null }
      def c = creds.findResult { it.id == new_id ? it : null }


        //println "found credential ${c.id} for username ${c.username}"

        def credentials_store = Jenkins.instance.getExtensionList(
            'com.cloudbees.plugins.credentials.SystemCredentialsProvider'
            )[0].getStore()

        def scope = CredentialsScope.GLOBAL
//          def scope = CredentialsScope.nodes

        //def description = ""
  def result
  def new_c = new UsernamePasswordCredentialsImpl(scope, new_id, description, username, new_password)
  if (c) {
        result = credentials_store.updateCredentials(
            com.cloudbees.plugins.credentials.domains.Domain.global(),
            c,
            new_c
            )
  } else {
        result = credentials_store.addCredentials(
            com.cloudbees.plugins.credentials.domains.Domain.global(),
            new_c
            )
  }
        if (result) {
          if(c) {
            println "credential updated for ${username}"
          } else {
            println "credential added for ${username}"
          }
          println "ID = ${new_c.id}"
        } else {
            println "failed to add credential for ${username}"
        }

}

//CredentialsScope.each{println "<>: ${it}"}

//addPassword('nodeuser', 'test1', '8bf43f0b-5cef-46b7-8d64-d1bd0a77e11a9', 'this is automatic generated credential')
//  username, password, uuid, description
addPassword('{{ credential.username }}', '{{ credential.password }}', '{{ credential.id }}', '{{ credential.name }}: {{ credential.description }}')
